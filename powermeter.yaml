substitutions:
  devicename: powermeter
  location_id: livingroom
  domoticz_device_id: "94"

esphome:
  name: $devicename
  platform: ESP8266
  board: nodemcuv2
  # includes:
  #   - custom/LT518.h

<<: !include common/base.yaml

logger:
  esp8266_store_log_strings_in_flash: false

uart:
  id: uart_bus
  tx_pin: GPIO5  # D1
  rx_pin: GPIO4  # D2
  baud_rate: 4800
  
modbus:
  # flow_control_pin: 5
  id: mod_bus

modbus_controller:
  - id: lt518
    address: 0x1
    modbus_id: mod_bus
    setup_priority: -10

switch:
  - platform: modbus_controller
    modbus_controller_id: lt518
    id: reset_energy_reading
    register_type: coil
    address: 0x1
    name: "Reset Energy Reading"
    write_lambda: |-
      payload.push_back(0x01);  // device address
      payload.push_back(0x4a);
      payload.push_back(0x53);
      payload.push_back(0x59);
      payload.push_back(0x03);
      payload.push_back(0x85);
      payload.push_back(0x98);
      return false;

sensor:
  - platform: modbus_controller
    modbus_controller_id: lt518
    name: "Voltage"
    id: powermeter_voltage
    register_type: holding
    address: 0x0048
    # custom_command: [ 0x01, 0x03, 0x00, 0x48, 0x00, 0x08, 0xc4, 0x1a]
    unit_of_measurement: "V"
    value_type: U_DWORD
    filters:
      - multiply: 0.0001
  - platform: modbus_controller
    modbus_controller_id: lt518
    name: "Current"
    id: powermeter_current
    register_type: holding
    address: 0x0049
    unit_of_measurement: "A"
    value_type: U_DWORD
    filters:
      - multiply: 0.0001
  - platform: modbus_controller
    modbus_controller_id: lt518
    name: "Power"
    id: powermeter_power
    register_type: holding
    address: 0x004a
    unit_of_measurement: "W"
    value_type: U_DWORD
    filters:
      - multiply: 0.0001
  - platform: modbus_controller
    modbus_controller_id: lt518
    name: "Energy"
    id: powermeter_energy
    register_type: holding
    address: 0x004b
    unit_of_measurement: "kWh"
    value_type: U_DWORD
    filters:
      - multiply: 0.0001
    on_value:
      then:
        - lambda: |-
            id(mqtt_client).publish_json("domoticz/in", [=](JsonObject root) {
              root["command"] = "udevice";
              root["idx"] = ${domoticz_device_id};
              root["nvalue"] = 0;
              root["svalue"] = String(x) + ";0";
            });
  - platform: modbus_controller
    modbus_controller_id: lt518
    name: "Power Factor"
    id: powermeter_power_factor
    register_type: holding
    address: 0x004c
    unit_of_measurement: ""
    value_type: U_DWORD
    filters:
      - multiply: 0.001
  - platform: modbus_controller
    modbus_controller_id: lt518
    name: "CO2"
    id: powermeter_co2
    register_type: holding
    address: 0x004d
    unit_of_measurement: "Kg"
    value_type: U_DWORD
    filters:
      - multiply: 0.001
#   - platform: custom
#     lambda: |-
#       auto sensor = new LT518PowerSensor(id(uart_bus));
#       App.register_component(sensor);
#       return {sensor};
#     sensors:
#       id: power
#       name: "Power Usage"
#       unit_of_measurement: W
#       accuracy_decimals: 0
#       filters:
#         - multiply: 0.0001
#       on_value:
#         then:
#           - lambda: |-
#               id(mqtt_client).publish_json("domoticz/in", [=](JsonObject root) {
#                 root["command"] = "udevice";
#                 root["idx"] = ${domoticz_device_id};
#                 root["nvalue"] = 0;
#                 root["svalue"] = String(x) + ";0";
#               });
# interval:
#   - interval: 60s
#     then:
#       - uart.write: [0x01, 0x4A, 0x53, 0x59, 0x03, 0x85, 0x98]
#       - logger.log: "Reset command wrote to uart"
